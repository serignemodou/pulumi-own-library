"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.ApplicationOwner = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("./utilities");
/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azuread from "@pulumi/azuread";
 *
 * const example = new azuread.ApplicationRegistration("example", {displayName: "example"});
 * const jane = new azuread.User("jane", {
 *     userPrincipalName: "jane.fischer@example.com",
 *     displayName: "Jane Fischer",
 *     password: "Ch@ngeMe",
 * });
 * const exampleJane = new azuread.ApplicationOwner("example_jane", {
 *     applicationId: example.id,
 *     ownerObjectId: jane.objectId,
 * });
 * ```
 *
 * > **Tip** For managing more application owners, create additional instances of this resource
 *
 * ## Import
 *
 * Application Owners can be imported using the object ID of the application and the object ID of the owner, in the following format.
 *
 * ```sh
 * $ pulumi import azuread:index/applicationOwner:ApplicationOwner example /applications/00000000-0000-0000-0000-000000000000/owners/11111111-1111-1111-1111-111111111111
 * ```
 */
class ApplicationOwner extends pulumi.CustomResource {
    /**
     * Get an existing ApplicationOwner resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new ApplicationOwner(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of ApplicationOwner.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ApplicationOwner.__pulumiType;
    }
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["applicationId"] = state ? state.applicationId : undefined;
            resourceInputs["ownerObjectId"] = state ? state.ownerObjectId : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.applicationId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'applicationId'");
            }
            if ((!args || args.ownerObjectId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'ownerObjectId'");
            }
            resourceInputs["applicationId"] = args ? args.applicationId : undefined;
            resourceInputs["ownerObjectId"] = args ? args.ownerObjectId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ApplicationOwner.__pulumiType, name, resourceInputs, opts);
    }
}
exports.ApplicationOwner = ApplicationOwner;
/** @internal */
ApplicationOwner.__pulumiType = 'azuread:index/applicationOwner:ApplicationOwner';
//# sourceMappingURL=applicationOwner.js.map