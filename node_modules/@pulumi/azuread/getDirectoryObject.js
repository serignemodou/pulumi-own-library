"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.getDirectoryObjectOutput = exports.getDirectoryObject = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("./utilities");
/**
 * Retrieves the OData type for a generic directory object having the provided object ID.
 *
 * ## API Permissions
 *
 * The following API permissions are required in order to use this data source.
 *
 * When authenticated with a service principal, this data source requires either `User.Read.All`, `Group.Read.All` or `Directory.Read.All`, depending on the type of object being queried.
 *
 * When authenticated with a user principal, this data source does not require any additional roles.
 *
 * ## Example Usage
 *
 * *Look up and output type of object by ID*
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azuread from "@pulumi/azuread";
 *
 * const example = azuread.getDirectoryObject({
 *     objectId: "00000000-0000-0000-0000-000000000000",
 * });
 * export const objectType = example.then(example => example.type);
 * ```
 *
 * ## Attributes Reference
 *
 * The following attributes are exported:
 *
 * * `objectId` - The object ID of the directory object.
 * * `type` - The shortened OData type of the directory object. Possible values include: `Group`, `User` or `ServicePrincipal`.
 */
function getDirectoryObject(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azuread:index/getDirectoryObject:getDirectoryObject", {
        "objectId": args.objectId,
    }, opts);
}
exports.getDirectoryObject = getDirectoryObject;
/**
 * Retrieves the OData type for a generic directory object having the provided object ID.
 *
 * ## API Permissions
 *
 * The following API permissions are required in order to use this data source.
 *
 * When authenticated with a service principal, this data source requires either `User.Read.All`, `Group.Read.All` or `Directory.Read.All`, depending on the type of object being queried.
 *
 * When authenticated with a user principal, this data source does not require any additional roles.
 *
 * ## Example Usage
 *
 * *Look up and output type of object by ID*
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azuread from "@pulumi/azuread";
 *
 * const example = azuread.getDirectoryObject({
 *     objectId: "00000000-0000-0000-0000-000000000000",
 * });
 * export const objectType = example.then(example => example.type);
 * ```
 *
 * ## Attributes Reference
 *
 * The following attributes are exported:
 *
 * * `objectId` - The object ID of the directory object.
 * * `type` - The shortened OData type of the directory object. Possible values include: `Group`, `User` or `ServicePrincipal`.
 */
function getDirectoryObjectOutput(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("azuread:index/getDirectoryObject:getDirectoryObject", {
        "objectId": args.objectId,
    }, opts);
}
exports.getDirectoryObjectOutput = getDirectoryObjectOutput;
//# sourceMappingURL=getDirectoryObject.js.map