"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.getGroupsOutput = exports.getGroups = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("./utilities");
/**
 * Gets Object IDs or Display Names for multiple Azure Active Directory groups.
 *
 * ## API Permissions
 *
 * The following API permissions are required in order to use this data source.
 *
 * When authenticated with a service principal, this data source requires one of the following application roles: `Group.Read.All` or `Directory.Read.All`
 *
 * When authenticated with a user principal, this data source does not require any additional roles.
 *
 * ## Example Usage
 *
 * *Look up by group name*
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azuread from "@pulumi/azuread";
 *
 * const example = azuread.getGroups({
 *     displayNames: [
 *         "group-a",
 *         "group-b",
 *     ],
 * });
 * ```
 *
 * *Look up by display name prefix*
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azuread from "@pulumi/azuread";
 *
 * const sales = azuread.getGroups({
 *     displayNamePrefix: "sales-",
 * });
 * ```
 *
 * *Look up all groups*
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azuread from "@pulumi/azuread";
 *
 * const all = azuread.getGroups({
 *     returnAll: true,
 * });
 * ```
 *
 * *Look up all mail-enabled groups*
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azuread from "@pulumi/azuread";
 *
 * const mailEnabled = azuread.getGroups({
 *     mailEnabled: true,
 *     returnAll: true,
 * });
 * ```
 *
 * *Look up all security-enabled groups that are not mail-enabled*
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azuread from "@pulumi/azuread";
 *
 * const securityOnly = azuread.getGroups({
 *     mailEnabled: false,
 *     returnAll: true,
 *     securityEnabled: true,
 * });
 * ```
 */
function getGroups(args, opts) {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azuread:index/getGroups:getGroups", {
        "displayNamePrefix": args.displayNamePrefix,
        "displayNames": args.displayNames,
        "ignoreMissing": args.ignoreMissing,
        "mailEnabled": args.mailEnabled,
        "objectIds": args.objectIds,
        "returnAll": args.returnAll,
        "securityEnabled": args.securityEnabled,
    }, opts);
}
exports.getGroups = getGroups;
/**
 * Gets Object IDs or Display Names for multiple Azure Active Directory groups.
 *
 * ## API Permissions
 *
 * The following API permissions are required in order to use this data source.
 *
 * When authenticated with a service principal, this data source requires one of the following application roles: `Group.Read.All` or `Directory.Read.All`
 *
 * When authenticated with a user principal, this data source does not require any additional roles.
 *
 * ## Example Usage
 *
 * *Look up by group name*
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azuread from "@pulumi/azuread";
 *
 * const example = azuread.getGroups({
 *     displayNames: [
 *         "group-a",
 *         "group-b",
 *     ],
 * });
 * ```
 *
 * *Look up by display name prefix*
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azuread from "@pulumi/azuread";
 *
 * const sales = azuread.getGroups({
 *     displayNamePrefix: "sales-",
 * });
 * ```
 *
 * *Look up all groups*
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azuread from "@pulumi/azuread";
 *
 * const all = azuread.getGroups({
 *     returnAll: true,
 * });
 * ```
 *
 * *Look up all mail-enabled groups*
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azuread from "@pulumi/azuread";
 *
 * const mailEnabled = azuread.getGroups({
 *     mailEnabled: true,
 *     returnAll: true,
 * });
 * ```
 *
 * *Look up all security-enabled groups that are not mail-enabled*
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azuread from "@pulumi/azuread";
 *
 * const securityOnly = azuread.getGroups({
 *     mailEnabled: false,
 *     returnAll: true,
 *     securityEnabled: true,
 * });
 * ```
 */
function getGroupsOutput(args, opts) {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("azuread:index/getGroups:getGroups", {
        "displayNamePrefix": args.displayNamePrefix,
        "displayNames": args.displayNames,
        "ignoreMissing": args.ignoreMissing,
        "mailEnabled": args.mailEnabled,
        "objectIds": args.objectIds,
        "returnAll": args.returnAll,
        "securityEnabled": args.securityEnabled,
    }, opts);
}
exports.getGroupsOutput = getGroupsOutput;
//# sourceMappingURL=getGroups.js.map